import { test, expect } from '@playwright/test'

const url = 'http://192.168.115.15:99/'
const Username = '#username'
const Password = '#password'
const ReceiveNo = '#scanReceivePayNo'
const BoxStart = '#txtBoxStartPay'
const BoxEnd = '#txtBoxEndPay'
const SNStart = '#txtSnStartPay'
const SNEnd = '#txtSnEndPay'
const Check = '#SwitchesReceived'
const Cmb = '#cmbPriceGPay'
const BoxQty = '#txtBoxQtyPay'
const Total = '#snReceiveTotalPay'
const Stamp = '#txtStampTyp'

test.describe('TC15 Pay Create', () => {
test.beforeEach(async ({ page }) => {
    await page.setViewportSize({ width: 1280, height: 720 })
    await page.goto(url)
    await page.locator(Username).fill('101610048')
    await expect(page.locator(Username)).toHaveValue('101610048')
    await page.locator(Password).fill('P@ssw0rd')
    await expect(page.locator(Password)).toHaveValue('P@ssw0rd')
    await page.getByRole('button', { name: 'LOGIN' }).click()
    await expect(page).toHaveURL(/Main\?lang=EN/)
    // Use .first() to select the first "Receive Stamp" link or use a more specific selector
    await page.getByText('Receive Stamp', { exact: true }).first().click();
    // Alternative: await page.locator('a[onclick="openMenu(\'ReceiveStamp\')"]').click();
    await expect(page).toHaveURL(/ReceiveStamp\?lang=EN/)
    await page.getByRole('button', { name: /Pay Create/i }).click()
    await page.locator('#dateCurrentpay').click()
    await page.locator('a.ui-state-active').click()
  })

  test('TC15-001 ผู้ใช้งานสร้างใบ Pay ไม่กรอกข้อมูล ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input Receive No !')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-002 ผู้ใช้งานสร้างใบ Pay ไม่กรอกข้อมูล Receive No ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    await page.locator('#dateCurrentpay').click()
    await page.locator('a.ui-state-active').click()
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input Receive No !')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-003 ผู้ใช้งานสร้างใบ Pay ไม่กรอกข้อมูล Box Start ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.getByRole('button', { name: /Add/i }).click();
    await expect(page.getByText('Please input Box Start !')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-004 ผู้ใช้งานสร้างใบ Pay ไม่กรอกข้อมูล Box End ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.locator(BoxStart).fill('1670P5001')
    await expect(page.locator(BoxStart)).toHaveValue('1670P5001')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input Box End !')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-005 ผู้ใช้งานสร้างใบ Pay กรอกข้อมูล Receive No ไม่ถูกต้อง ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    // TC15-005-1 Test case 1: Short invalid input
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('xxx')
    await expect(page.locator(ReceiveNo)).toHaveValue('xxx')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input Receive No 10 digit !')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // TC15-005-2 Test case 2: Long invalid input
    await page.locator(ReceiveNo).focus()
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('xxxxxxxxxx')
    await expect(page.getByText(/Invalid Format ! xxxxxxxxxx ,Please input pattern "PAY0000001"/)).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // TC15-005-3 Test case 3: Invalid with space
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill(' PAY6700001')
    const value = await page.locator(ReceiveNo).inputValue()
    expect(value.trim()).toBe('PAY6700001')
  })

  test('TC15-006 ผู้ใช้งานสร้างใบ Pay เลือกวันที่ Receive ย้อนหลัง ระบบไม่เปิดให้เลือกวันที่ย้อนหลัง', async ({ page }) => {
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    // Verify today's date is selected (format: DD/MM/YYYY)
    const today = new Date()
    const formattedDate = `${String(today.getDate()).padStart(2, '0')}/${String(today.getMonth() + 1).padStart(2, '0')}/${today.getFullYear()}`
    await expect(page.locator('#dateCurrentpay')).toHaveValue(formattedDate)
    await page.locator('#dateCurrentpay').click()
    // Verify previous dates are disabled
    const disabledDates = page.locator('.ui-datepicker-calendar td.ui-datepicker-unselectable.ui-state-disabled');
    await expect(disabledDates.first()).toBeVisible()
  })

  test('TC15-007 ผู้ใช้งานสร้างใบ Pay กรอกข้อมูล Box Start / End ไม่ถูกต้อง ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    // tc15-007-1
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.locator(BoxStart).fill('XXX')
    await expect(page.locator(BoxStart)).toHaveValue('XXX')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input Box Start 9 digit!')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-007-2
    await page.locator(BoxStart).clear()
    await page.locator(BoxStart).fill('1670P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0001')
    await page.locator(BoxEnd).fill('XXX')
    await expect(page.locator(BoxEnd)).toHaveValue('XXX')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input Box End 9 digit!')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-007-3
    await page.locator(BoxStart).clear()
    await page.locator(BoxStart).fill('1670P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0001')
    await page.locator(BoxEnd).clear()
    await page.locator(BoxEnd).fill('1670A1001')
    await expect(page.locator(BoxEnd)).toHaveValue('1670A1001')
    await expect(page.getByText('Character of BoxEnd "1670A" does not match to Character of BoxStart "1670P"')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    await page.locator(BoxStart).clear()
    await page.locator(BoxEnd).clear()
    // tc15-007-4
    await page.locator(BoxStart).fill('1670P0000')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0000')
    await page.locator(BoxEnd).fill('1670P0000')
    await expect(page.getByText('Please Input running starting 0001 !')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    await page.locator(BoxStart).clear()
    await page.locator(BoxEnd).clear()
    // tc15-007-5
    await page.locator(BoxStart).fill('111111111')
    await expect(page.locator(BoxStart)).toHaveValue('111111111')
    await page.locator(BoxEnd).fill('111111111')
    await expect(page.locator(BoxEnd)).toHaveValue('111111111')
    await expect(page.getByText('Box Start OR Box End incorrect format!')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    await page.locator(BoxStart).clear()
    await page.locator(BoxEnd).clear()
    // tc15-007-6
    await page.locator(BoxEnd).fill('1670A1001')
    await expect(page.locator(BoxEnd)).toHaveValue('1670A1001')
    await page.locator(BoxStart).fill('1670P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0001')
    await expect(page.getByText('Character of BoxStart "1670P" does not match to Character of BoxEnd "1670A"')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    await page.locator(BoxStart).clear()
    await page.locator(BoxEnd).clear()
    // tc15-007-7
    await page.locator(BoxStart).fill('1670S0001')
    await expect(page.locator(BoxStart)).toHaveValue('1670S0001')
    await page.locator(BoxEnd).fill('1670S0365')
    await expect(page.locator(BoxEnd)).toHaveValue('1670S0365')
    await expect(page.getByText('Unable to specify stamp type. Please check again.')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-008 ผู้ใช้งานสร้างใบ Pay กรอกข้อมูล Box Start มากกว่า End ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.locator(BoxStart).fill('1670P0005')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0005')
    await page.locator(BoxEnd).fill('1670P0001')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0001')
    await expect(page.getByText('BoxStart : 1670P0005 greater than BoxEnd : 1670P0001')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-009 ผู้ใช้งานสร้างใบ Pay ไม่กรอกข้อมูล Price Group ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.locator(BoxStart).fill('1670P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0001')
    await page.locator(BoxEnd).fill('1670P0020')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0020')
    await page.waitForTimeout(2000)
    // Verify automatically calculated details
    await expect(page.locator(BoxQty)).toHaveValue('20')
    await expect(page.locator(SNStart)).toHaveValue('P670000000001')
    await expect(page.locator(SNEnd)).toHaveValue('P670004000000')
    await expect(page.locator(Total)).toHaveValue('4,000,000')
    // Verify PriceGroup validation
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input PriceGroup !')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-010 ผู้ใช้งานสร้างใบ Pay กรณีไม่เต็มกล่อง กรอกข้อมูล SN End ไม่ถูกต้อง ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    // tc15-010-1
    await page.locator(ReceiveNo).clear();
    await page.locator(ReceiveNo).fill('PAY2304252')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY2304252')
    await page.locator(Check).click({ force: true })
    await page.locator(BoxStart).fill('1680P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1680P0001')
    await page.locator(BoxEnd).fill('1680P0004')
    await expect(page.locator(BoxEnd)).toHaveValue('1680P0004')
    await page.locator(SNEnd).clear()
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input Sn End !')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-010-2
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('xxx')
    await expect(page.locator(SNEnd)).toHaveValue('xxx')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Please input Sn End 13 digit!')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-010-3
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('xx68000076000')
    await expect(page.locator(SNEnd)).toHaveValue('xx68000076000')
    await expect(page.getByText('SN start digit P68 does not match to SN end digit XX6')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    await page.locator(Cmb).selectOption('70')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Input string was not in a correct format.')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-010-4
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('p680000760000')
    const value = await page.locator(SNEnd).inputValue()
    expect(value.toUpperCase()).toBe('P680000760000')
    // tc15-010-5
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('x680000760000')
    await expect(page.locator(SNEnd)).toHaveValue('x680000760000')
    await expect(page.getByText('SN start digit P68 does not match to SN end digit X68')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    await page.locator(Cmb).selectOption('70')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Stamp X680000760000 incorrect format!')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-010-6
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P680000900000')
    await expect(page.getByText("Total of stamps is incorrect.")).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-010-7
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P800000800000')
    await expect(page.locator(SNEnd)).toHaveValue('P800000800000')
    await expect(page.getByText('SN start digit P68 does not match to SN end digit P80')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    await page.locator(Cmb).selectOption('70')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Stamp P800000800000 incorrect format!')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-011 ผู้ใช้งานสร้างใบ Pay กรณีไม่เต็มกล่อง กรอกข้อมูล SN End น้อยกว่า SNStart ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY2304252')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY2304252')
    await page.locator(Check).click({ force: true })
    await page.locator(BoxStart).fill('1680P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1680P0001')
    await page.locator(BoxEnd).fill('1680P0004')
    await expect(page.locator(BoxEnd)).toHaveValue('1680P0004')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P680000000000')
    await expect(page.locator(SNEnd)).toHaveValue('P680000000000')
    await expect(page.getByText('SnEnd is less than SnStart')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    await page.locator(Cmb).selectOption('70')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('SnEnd is less than SnStart')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-013 ผู้ใช้งานสร้างใบ Pay กรอกข้อมูลถูกต้อง ระบบแสดงรายการในตาราง', async ({ page }) => {
    // tc15-013-1
    await page.locator(ReceiveNo).fill('PAY6700002')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700002')
    await page.locator(BoxStart).fill('1670P1001')
    await expect(page.locator(BoxStart)).toHaveValue('1670P1001')
    await page.locator(BoxEnd).fill('1670P1020')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P1020')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator(BoxQty)).toHaveValue('20')
    await expect(page.locator(SNStart)).toHaveValue('P670200000001')
    await expect(page.locator(SNEnd)).toHaveValue('P670204000000')
    await expect(page.locator(Total)).toHaveValue('4,000,000')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(3000)
    const rows = page.locator('#TBdetailReceivePay tbody tr')
    await expect(rows).toHaveCount(await rows.count())
    const firstRow = rows.first()
    await expect(firstRow.locator('td').nth(0)).toContainText('PAY6700002')
    await expect(firstRow.locator('td').nth(2)).toContainText('70')
    await expect(firstRow.locator('td').nth(3)).toContainText('1670P1001')
    await expect(firstRow.locator('td').nth(4)).toContainText('1670P1020')
    await expect(firstRow.locator('td').nth(5)).toContainText('20')
    await expect(firstRow.locator('td').nth(6)).toContainText('P670200000001')
    await expect(firstRow.locator('td').nth(7)).toContainText('P670204000000')
    await expect(firstRow.locator('td').nth(8)).toContainText('4,000,000')
    await expect(firstRow.locator('td').nth(9)).toContainText('T&T')
    // tc15-013-2
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY2304252')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY2304252')
    await page.locator('#dateCurrentpay').click()
    await page.locator('a.ui-state-active').click()
    await page.locator(Check).click({ force: true })
    await page.locator(BoxStart).fill('1680P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1680P0001')
    await page.locator(BoxEnd).fill('1680P0004')
    await expect(page.locator(BoxEnd)).toHaveValue('1680P0004')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P680000780000')
    await expect(page.locator(SNEnd)).toHaveValue('P680000780000')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator(BoxQty)).toHaveValue('4')
    await expect(page.locator(SNStart)).toHaveValue('P680000000001')
    await expect(page.locator(SNEnd)).toHaveValue('P680000780000')
    await expect(page.locator(Total)).toHaveValue('780000')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(3000)
    const latestRow = page.locator('#TBdetailReceivePay tbody tr').first()
    await expect(latestRow.locator('td').nth(0)).toContainText('PAY2304252')
    await expect(latestRow.locator('td').nth(2)).toContainText('70')
    await expect(latestRow.locator('td').nth(3)).toContainText('1680P0001')
    await expect(latestRow.locator('td').nth(4)).toContainText('1680P0004')
    await expect(latestRow.locator('td').nth(5)).toContainText('4')
    await expect(latestRow.locator('td').nth(6)).toContainText('P680000000001')
    await expect(latestRow.locator('td').nth(7)).toContainText('P680000780000')
    await expect(latestRow.locator('td').nth(8)).toContainText('780,000')
    await expect(latestRow.locator('td').nth(9)).toContainText('Phase 1')
  })

  test('TC15-014 ผู้ใช้งานกรอก Username และ Password ที่มีสิทธิ์ตั้งค่า สามารถเข้าใช้งานเมนู Setting ได้', async ({ page }) => {
    // tc15-014-1
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.locator(BoxStart).fill('1670P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0001')
    await page.locator(BoxEnd).fill('1670P0020')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0020')
    await page.locator(Cmb).selectOption('70')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Duplicate Data')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-014-2
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY2304252')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY2304252')
    await page.locator(Check).click({ force: true })
    await page.locator(BoxStart).fill('1680P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1680P0001')
    await page.locator(BoxEnd).fill('1680P0004')
    await expect(page.locator(BoxEnd)).toHaveValue('1680P0004')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P680000800000')
    await expect(page.locator(SNEnd)).toHaveValue('P680000800000')
    await page.locator(Cmb).selectOption('70')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Duplicate Data')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-015 ผู้ใช้งานสร้างใบ Pay คลิกปุ่ม Reset ระบบเคลียร์ข้อมูลการสร้างใบ pay', async ({ page }) => {
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.locator(BoxStart).fill('1670P0001')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0001')
    await page.locator(BoxEnd).fill('1670P0020')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0020')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator('#createPayModal')).toBeVisible()
    await page.locator('#createPayModal #btnReset').click()
    // ตรวจสอบว่าข้อมูลถูกเคลียร์
    await expect(page.locator(ReceiveNo)).toHaveValue('')
    await expect(page.locator(BoxStart)).toHaveValue('')
    await expect(page.locator(BoxEnd)).toHaveValue('')
    await expect(page.locator(Cmb)).toHaveValue('')
  })

  test('TC15-016 ผู้ใช้งานลบข้อมูลรายการรับเข้า ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    // tc15-016-1
    await page.locator(ReceiveNo).fill('PAY6700002')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700002')
    await page.locator('#createPayModal button[id="btnEdit"]').first().click()
    await expect(page.getByText("DeletePayment : Success ")).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-016-2
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY2304253')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY2304253')
    await page.locator('#createPayModal button[id="btnEdit"]').first().click()
    await expect(page.getByText("DeletePayment : Success ")).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-017 ผู้ใช้งานตรวจสอบรับเข้าใบ Pay และลบข้อมูลรายการรับเข้า ระบบไม่เปิดให้ลบข้อมูล', async ({ page }) => {
    await expect(page.locator('#createPayModal')).toBeVisible()
    await page.locator('#createPayModal button.close').click()
    // เลือกวันที่เริ่มต้นที่มีใบ PAY6700001
    await page.locator('#_startDate').click()
    await expect(page.locator('.ui-datepicker-year')).toContainText('2025')
    await expect(page.locator('.ui-datepicker-month')).toContainText('September')
    await page.locator('.ui-datepicker-calendar td a').getByText('2').click()
    // เลือกวันที่สิ้นสุดที่มีใบ PAY6700001
    await page.locator('#_endDate').click()
    await expect(page.locator('.ui-datepicker-year')).toContainText('2025')
    await expect(page.locator('.ui-datepicker-month')).toContainText('September')
    await page.locator('.ui-datepicker-calendar td a').getByText('2').click()
    await page.locator('#btnSearch').click()
    await page.locator('#btnView').click()
    await expect(page.locator('#createReceiveModal')).toBeVisible()
    await expect(page.locator('#scanReceiveNo')).toHaveValue('PAY6700001')
    await expect(page.locator('#receiveID')).toHaveValue('R2250902001')
    await expect(page.locator('#txtSnStart')).toHaveValue('P670000000001')
    await expect(page.locator('#txtSnEnd')).toHaveValue('P670004000000')
    await expect(page.locator('#snReceiveTotal')).toHaveValue('4,000,000')
    await expect(page.locator('#receiveDateShow')).toHaveValue('02/09/2025')
    await page.locator('#createReceiveModal button.close').click()
    await page.getByRole('button', { name: /Pay Create/i }).click()
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.locator('#createPayModal button[id="btnEdit"]').first().click()
    await expect(page.getByText("Receive No has been used! ,Can't be Delete")).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-018 ผู้ใช้งานสร้างใบ Pay กรอกข้อมูลช่วงแสตมป์ซ้ำ ระบบแสดงการแจ้งเตือน', async ({ page }) => {
    // tc15-018-1
    await page.locator(ReceiveNo).fill('PAY6700001')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700001')
    await page.locator(BoxStart).fill('1670P0002')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0002')
    await page.locator(BoxEnd).fill('1670P0003')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0003')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator(BoxQty)).toHaveValue('2')
    await expect(page.locator(SNStart)).toHaveValue('P670000200001')
    await expect(page.locator(SNEnd)).toHaveValue('P670000600000')
    await expect(page.locator(Total)).toHaveValue('400,000')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Duplicate Data')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
    // tc15-018-2
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY2304252')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY2304252')
    await page.locator(Check).click({ force: true })
    await page.locator(BoxStart).fill('1680P0002')
    await expect(page.locator(BoxStart)).toHaveValue('1680P0002')
    await page.locator(BoxEnd).fill('1680P0003')
    await expect(page.locator(BoxEnd)).toHaveValue('1680P0003')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P680000600000')
    await expect(page.locator(SNEnd)).toHaveValue('P680000600000')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator(BoxQty)).toHaveValue('2')
    await expect(page.locator(SNStart)).toHaveValue('P680000200001')
    await expect(page.locator(SNEnd)).toHaveValue('P680000600000')
    await expect(page.locator(Total)).toHaveValue('400000')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Duplicate Data')).toBeVisible()
    await page.getByRole('button', { name: 'OK' }).click()
  })

  test('TC15-019 ผู้ใช้งานสร้างใบ Pay 1 Stamp Type ระบบแสดงรายการในตาราง', async ({ page }) => {
    // tc15-019-1 T&T
    await page.locator(ReceiveNo).fill('PAY6700002')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700002')
    await page.locator(BoxStart).fill('1670P0101')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0101')
    await page.locator(BoxEnd).fill('1670P0120')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0120')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator(BoxQty)).toHaveValue('20')
    await expect(page.locator(SNStart)).toHaveValue('P670020000001')
    await expect(page.locator(SNEnd)).toHaveValue('P670024000000')
    await expect(page.locator(Total)).toHaveValue('4,000,000')
    await expect(page.locator(Stamp)).toHaveValue('Track & Trace')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(5000)
    // 1.2
    await page.locator(BoxStart).fill('1670S0361')
    await expect(page.locator(BoxStart)).toHaveValue('1670S0361')
    await page.locator(BoxEnd).fill('1670S0365')
    await expect(page.locator(BoxEnd)).toHaveValue('1670S0365')
    await page.locator(Cmb).selectOption('105')
    await expect(page.locator(BoxQty)).toHaveValue('5')
    await expect(page.locator(SNStart)).toHaveValue('S670072000001')
    await expect(page.locator(SNEnd)).toHaveValue('S670073000000')
    await expect(page.locator(Total)).toHaveValue('1,000,000')
    await expect(page.locator(Stamp)).toHaveValue('Track & Trace')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(5000)
    // tc15-019-2 Phase1
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY2304253')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY2304253')
    await page.locator(Check).click({ force: true })
    await page.locator(BoxStart).fill('1610P2001')
    await expect(page.locator(BoxStart)).toHaveValue('1610P2001')
    await page.locator(BoxEnd).fill('1610P2004')
    await expect(page.locator(BoxEnd)).toHaveValue('1610P2004')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P610400760000')
    await expect(page.locator(SNEnd)).toHaveValue('P610400760000')
    await page.locator(Cmb).selectOption('105')
    await expect(page.locator(BoxQty)).toHaveValue('4')
    await expect(page.locator(SNStart)).toHaveValue('P610400000001')
    await expect(page.locator(SNEnd)).toHaveValue('P610400760000')
    await expect(page.locator(Total)).toHaveValue('760000')
    await expect(page.locator(Stamp)).toHaveValue('Phase 1')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(5000)
    // 2.2
    await page.locator(BoxStart).clear()
    await page.locator(BoxStart).fill('1610S0001')
    await expect(page.locator(BoxStart)).toHaveValue('1610S0001')
    await page.locator(BoxEnd).clear()
    await page.locator(BoxEnd).fill('1610S0003')
    await expect(page.locator(BoxEnd)).toHaveValue('1610S0003')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('S610000520000')
    await expect(page.locator(SNEnd)).toHaveValue('S610000520000')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator(BoxQty)).toHaveValue('3')
    await expect(page.locator(SNStart)).toHaveValue('S610000000001')
    await expect(page.locator(SNEnd)).toHaveValue('S610000520000')
    await expect(page.locator(Total)).toHaveValue('520000')
    await expect(page.locator(Stamp)).toHaveValue('Phase 1')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
  })

  test('TC15-020 ผู้ใช้งานสร้างใบ Pay มากกว่า 1 Stamp Type ระบบแสดงรายการในตาราง', async ({ page }) => {
    // tc15-020-1 T&T
    await page.locator(ReceiveNo).fill('PAY6700003')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY6700003')
    await page.locator(BoxStart).fill('1670P0121')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0121')
    await page.locator(BoxEnd).fill('1670P0125')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0125')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator(BoxQty)).toHaveValue('5')
    await expect(page.locator(SNStart)).toHaveValue('P670024000001')
    await expect(page.locator(SNEnd)).toHaveValue('P670025000000')
    await expect(page.locator(Total)).toHaveValue('1,000,000')
    await expect(page.locator(Stamp)).toHaveValue('Track & Trace')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(5000)
    // 1.2 Phase1
    await page.locator(BoxStart).fill('1670S0001')
    await expect(page.locator(BoxStart)).toHaveValue('1670S0001')
    await page.locator(BoxEnd).fill('1670S0005')
    await expect(page.locator(BoxEnd)).toHaveValue('1670S0005')
    await page.locator(Cmb).selectOption('105')
    await expect(page.locator(BoxQty)).toHaveValue('5')
    await expect(page.locator(SNStart)).toHaveValue('S670000000001')
    await expect(page.locator(SNEnd)).toHaveValue('S670001000000')
    await expect(page.locator(Total)).toHaveValue('1,000,000')
    await expect(page.locator(Stamp)).toHaveValue('Phase 1')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(5000)
    // 1.3 T&T
    await page.locator(BoxStart).clear()
    await page.locator(BoxStart).fill('1670S0366')
    await expect(page.locator(BoxStart)).toHaveValue('1670S0366')
    await page.locator(BoxEnd).clear()
    await page.locator(BoxEnd).fill('1670S0370')
    await expect(page.locator(BoxEnd)).toHaveValue('1670S0370')
    await page.locator(Cmb).selectOption('105')
    await expect(page.locator(BoxQty)).toHaveValue('5')
    await expect(page.locator(SNStart)).toHaveValue('S670073000001')
    await expect(page.locator(SNEnd)).toHaveValue('S670074000000')
    await expect(page.locator(Total)).toHaveValue('1,000,000')
    await expect(page.locator(Stamp)).toHaveValue('Track & Trace')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(5000)
    // tc15-020-2 Phase1
    await page.locator(ReceiveNo).clear()
    await page.locator(ReceiveNo).fill('PAY2304254')
    await expect(page.locator(ReceiveNo)).toHaveValue('PAY2304254')
    await page.locator(Check).click({ force: true })
    await page.locator(BoxStart).fill('1670P0301')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0301')
    await page.locator(BoxEnd).fill('1670P0305')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0305')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P670060840000')
    await expect(page.locator(SNEnd)).toHaveValue('P670060840000')
    await page.locator(Cmb).selectOption('70')
    await expect(page.locator(BoxQty)).toHaveValue('5')
    await expect(page.locator(SNStart)).toHaveValue('P670060000001')
    await expect(page.locator(SNEnd)).toHaveValue('P670060840000')
    await expect(page.locator(Total)).toHaveValue('840000')
    await expect(page.locator(Stamp)).toHaveValue('Track & Trace')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(5000)
    // 2.2 T&T
    await page.locator(BoxStart).clear()
    await page.locator(BoxStart).fill('1610P2006')
    await expect(page.locator(BoxStart)).toHaveValue('1610P2006')
    await page.locator(BoxEnd).clear()
    await page.locator(BoxEnd).fill('1610P2010')
    await expect(page.locator(BoxEnd)).toHaveValue('1610P2010')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P610401880000')
    await expect(page.locator(SNEnd)).toHaveValue('P610401880000')
    await page.locator(Cmb).selectOption('105')
    await expect(page.locator(BoxQty)).toHaveValue('5')
    await expect(page.locator(SNStart)).toHaveValue('P610401000001')
    await expect(page.locator(SNEnd)).toHaveValue('P610401880000')
    await expect(page.locator(Total)).toHaveValue('880000')
    await expect(page.locator(Stamp)).toHaveValue('Phase 1')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
    await page.waitForTimeout(5000)
    // 2.3 Phase1
    await page.locator(BoxStart).clear()
    await page.locator(BoxStart).fill('1670P0021')
    await expect(page.locator(BoxStart)).toHaveValue('1670P0021')
    await page.locator(BoxEnd).clear()
    await page.locator(BoxEnd).fill('1670P0025')
    await expect(page.locator(BoxEnd)).toHaveValue('1670P0025')
    await page.locator(SNEnd).clear()
    await page.locator(SNEnd).fill('P670004800000')
    await expect(page.locator(SNEnd)).toHaveValue('P670004800000')
    await page.locator(Cmb).selectOption('105')
    await expect(page.locator(BoxQty)).toHaveValue('5')
    await expect(page.locator(SNStart)).toHaveValue('P670004000001')
    await expect(page.locator(SNEnd)).toHaveValue('P670004800000')
    await expect(page.locator(Total)).toHaveValue('800000')
    await expect(page.locator(Stamp)).toHaveValue('Track & Trace')
    await page.getByRole('button', { name: /Add/i }).click()
    await expect(page.getByText('Create Payment Success')).toBeVisible()
  })
})